{"ast":null,"code":"var _jsxFileName = \"/Users/frankyang/Desktop/Pixelate/Products/pixelate-web/frontend/src/pages/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // currently email is captures in the React state variable email \n  // should save this to API and then to some database\n  const [email, setEmail] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [waitlistEmails, setWaitlistEmails] = useState([]);\n  const [showAdmin, setShowAdmin] = useState(false);\n\n  // Load saved emails from localStorage when component mounts\n  useEffect(() => {\n    const savedEmails = localStorage.getItem('waitlistEmails');\n    if (savedEmails) {\n      setWaitlistEmails(JSON.parse(savedEmails));\n    }\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Basic email validation\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n      setError(\"Please enter a valid email address\");\n      return;\n    }\n\n    // Here to send the email to your backend\n    // For now, we'll just simulate a successful submission\n    // Add email to our local storage with timestamp\n    const newEmail = {\n      email: email,\n      timestamp: new Date().toISOString()\n    };\n    const updatedEmails = [...waitlistEmails, newEmail];\n    setWaitlistEmails(updatedEmails);\n\n    // Save to localStorage\n    localStorage.setItem('waitlistEmails', JSON.stringify(updatedEmails));\n    console.log(\"Email submitted:\", email);\n    setSubmitted(true);\n    setError(\"\");\n    setEmail(\"\");\n  };\n\n  // Function to download emails as CSV\n  const downloadCSV = () => {\n    // Create CSV content\n    let csvContent = \"Email,Timestamp\\n\";\n    waitlistEmails.forEach(item => {\n      csvContent += `${item.email},${item.timestamp}\\n`;\n    });\n\n    // Create a blob and download link\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', 'waitlist_emails.csv');\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Toggle admin panel with Ctrl+Shift+A\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.ctrlKey && e.shiftKey && e.key === 'A') {\n        setShowAdmin(prev => !prev);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"video-background\",\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/images/other-background.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to your Dashboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Our products will be coming soon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waiting-list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Join Our Waiting List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Be the first to test our beta version when it's released.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), !submitted ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"waiting-list-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Enter your email address\",\n              className: \"email-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Join Waiting List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Thank you for joining our waiting list! We'll notify you when our beta version is ready.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), showAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Admin Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total emails collected: \", waitlistEmails.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadCSV,\n          className: \"admin-button\",\n          children: \"Download Emails as CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-list\",\n          children: waitlistEmails.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: waitlistEmails.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item.email, \" - \", new Date(item.timestamp).toLocaleString()]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No emails collected yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"xmMu4GPWUZ8+M3dbmlwl48eZu6M=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","email","setEmail","submitted","setSubmitted","error","setError","waitlistEmails","setWaitlistEmails","showAdmin","setShowAdmin","savedEmails","localStorage","getItem","JSON","parse","handleSubmit","e","preventDefault","test","newEmail","timestamp","Date","toISOString","updatedEmails","setItem","stringify","console","log","downloadCSV","csvContent","forEach","item","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","handleKeyDown","ctrlKey","shiftKey","key","prev","window","addEventListener","removeEventListener","className","children","autoPlay","loop","muted","src","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","length","onClick","map","index","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/frankyang/Desktop/Pixelate/Products/pixelate-web/frontend/src/pages/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = () => {\n\n  // currently email is captures in the React state variable email \n  // should save this to API and then to some database\n  const [email, setEmail] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [waitlistEmails, setWaitlistEmails] = useState([]);\n  const [showAdmin, setShowAdmin] = useState(false);\n\n  // Load saved emails from localStorage when component mounts\n  useEffect(() => {\n    const savedEmails = localStorage.getItem('waitlistEmails');\n    if (savedEmails) {\n      setWaitlistEmails(JSON.parse(savedEmails));\n    }\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Basic email validation\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n      setError(\"Please enter a valid email address\");\n      return;\n    }\n\n    // Here to send the email to your backend\n    // For now, we'll just simulate a successful submission\n    // Add email to our local storage with timestamp\n    const newEmail = {\n      email: email,\n      timestamp: new Date().toISOString()\n    };\n\n    const updatedEmails = [...waitlistEmails, newEmail];\n    setWaitlistEmails(updatedEmails);\n\n    // Save to localStorage\n    localStorage.setItem('waitlistEmails', JSON.stringify(updatedEmails));\n\n    console.log(\"Email submitted:\", email);\n    setSubmitted(true);\n    setError(\"\");\n    setEmail(\"\");\n  };\n\n  // Function to download emails as CSV\n  const downloadCSV = () => {\n    // Create CSV content\n    let csvContent = \"Email,Timestamp\\n\";\n    waitlistEmails.forEach(item => {\n      csvContent += `${item.email},${item.timestamp}\\n`;\n    });\n\n    // Create a blob and download link\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', 'waitlist_emails.csv');\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Toggle admin panel with Ctrl+Shift+A\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.ctrlKey && e.shiftKey && e.key === 'A') {\n        setShowAdmin(prev => !prev);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  return (\n    <div className=\"dashboard-container\">\n      <video className=\"video-background\" autoPlay loop muted>\n        <source src=\"/images/other-background.mp4\" type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n\n      <div className=\"dashboard-content\">\n        <h2>Welcome to your Dashboard!</h2>\n        <p>Our products will be coming soon!</p>\n\n        <div className=\"waiting-list-container\">\n          <h3>Join Our Waiting List</h3>\n          <p>Be the first to test our beta version when it's released.</p>\n\n          {!submitted ? (\n            <form onSubmit={handleSubmit} className=\"waiting-list-form\">\n              <div className=\"form-group\">\n                <input\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"Enter your email address\"\n                  className=\"email-input\"\n                />\n                {error && <p className=\"error-message\">{error}</p>}\n              </div>\n              <button type=\"submit\" className=\"submit-button\">Join Waiting List</button>\n            </form>\n          ) : (\n            <div className=\"success-message\">\n              <p>Thank you for joining our waiting list! We'll notify you when our beta version is ready.</p>\n            </div>\n          )}\n        </div>\n\n        {/* Hidden admin panel - press Ctrl+Shift+A to toggle */}\n        {showAdmin && (\n          <div className=\"admin-panel\">\n            <h3>Admin Panel</h3>\n            <p>Total emails collected: {waitlistEmails.length}</p>\n            <button onClick={downloadCSV} className=\"admin-button\">\n              Download Emails as CSV\n            </button>\n            <div className=\"email-list\">\n              {waitlistEmails.length > 0 ? (\n                <ul>\n                  {waitlistEmails.map((item, index) => (\n                    <li key={index}>\n                      {item.email} - {new Date(item.timestamp).toLocaleString()}\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <p>No emails collected yet.</p>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}