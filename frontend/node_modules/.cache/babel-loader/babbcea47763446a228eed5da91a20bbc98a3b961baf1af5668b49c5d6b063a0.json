{"ast":null,"code":"var _jsxFileName = \"/Users/frankyang/Desktop/Pixelate/Products/pixelate-web/frontend/src/pages/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // currently email is captures in the React state variable email \n  // should save this to API and then to some database\n  const [email, setEmail] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Add these new state variables for email subscription\n  const [subscribeEmail, setSubscribeEmail] = useState('');\n  const [subscribeMessage, setSubscribeMessage] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Basic email validation\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n      setError(\"Please enter a valid email address\");\n      return;\n    }\n\n    // Here you would typically send the email to your backend\n    // For now, we'll just simulate a successful submission\n    console.log(\"Email submitted:\", email);\n    setSubmitted(true);\n    setError(\"\");\n    setEmail(\"\");\n  };\n\n  // Add these new functions for email validation and subscription\n  const handleEmailChange = e => {\n    setSubscribeEmail(e.target.value);\n    setEmailError('');\n  };\n  const validateEmail = email => {\n    // Regular expression for email validation\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailRegex.test(email);\n  };\n  const handleSubscribe = e => {\n    e.preventDefault();\n\n    // Clear previous messages\n    setSubscribeMessage('');\n\n    // Validate email\n    if (!subscribeEmail.trim()) {\n      setEmailError('Email is required');\n      return;\n    }\n    if (!validateEmail(subscribeEmail)) {\n      setEmailError('Please enter a valid email address');\n      return;\n    }\n\n    // If validation passes, proceed with subscription\n    // Here you would typically make an API call to your backend\n    console.log('Subscribing email:', subscribeEmail);\n\n    // Show success message\n    setSubscribeMessage('Thank you for subscribing!');\n    setSubscribeEmail('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"video-background\",\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/images/other-background.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to your Dashboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Our products will be coming soon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waiting-list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Join Our Waiting List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Be the first to test our beta version when it's released.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), !submitted ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"waiting-list-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Enter your email address\",\n              className: \"email-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Join Waiting List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Thank you for joining our waiting list! We'll notify you when our beta version is ready.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"dashboard-mailing-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mailing-list-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stay Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Subscribe to our newsletter for the latest features and updates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubscribe,\n            className: \"dashboard-subscribe-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Enter your email\",\n                value: subscribeEmail,\n                onChange: handleEmailChange,\n                className: emailError ? 'error' : '',\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), emailError && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-message\",\n                children: emailError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"dashboard-subscribe-button\",\n              children: \"Subscribe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), subscribeMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"subscribe-message success\",\n            children: subscribeMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"jqnwScdcwK7SduxZeZV2O6y20X8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dashboard","_s","email","setEmail","submitted","setSubmitted","error","setError","subscribeEmail","setSubscribeEmail","subscribeMessage","setSubscribeMessage","emailError","setEmailError","handleSubmit","e","preventDefault","test","console","log","handleEmailChange","target","value","validateEmail","emailRegex","handleSubscribe","trim","className","children","autoPlay","loop","muted","src","type","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/frankyang/Desktop/Pixelate/Products/pixelate-web/frontend/src/pages/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = () => {\n\n  // currently email is captures in the React state variable email \n  // should save this to API and then to some database\n  const [email, setEmail] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Add these new state variables for email subscription\n  const [subscribeEmail, setSubscribeEmail] = useState('');\n  const [subscribeMessage, setSubscribeMessage] = useState('');\n  const [emailError, setEmailError] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Basic email validation\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n      setError(\"Please enter a valid email address\");\n      return;\n    }\n\n    // Here you would typically send the email to your backend\n    // For now, we'll just simulate a successful submission\n    console.log(\"Email submitted:\", email);\n    setSubmitted(true);\n    setError(\"\");\n    setEmail(\"\");\n  };\n\n  // Add these new functions for email validation and subscription\n  const handleEmailChange = (e) => {\n    setSubscribeEmail(e.target.value);\n    setEmailError('');\n  };\n\n  const validateEmail = (email) => {\n    // Regular expression for email validation\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailRegex.test(email);\n  };\n\n  const handleSubscribe = (e) => {\n    e.preventDefault();\n    \n    // Clear previous messages\n    setSubscribeMessage('');\n    \n    // Validate email\n    if (!subscribeEmail.trim()) {\n      setEmailError('Email is required');\n      return;\n    }\n    \n    if (!validateEmail(subscribeEmail)) {\n      setEmailError('Please enter a valid email address');\n      return;\n    }\n    \n    // If validation passes, proceed with subscription\n    // Here you would typically make an API call to your backend\n    console.log('Subscribing email:', subscribeEmail);\n    \n    // Show success message\n    setSubscribeMessage('Thank you for subscribing!');\n    setSubscribeEmail('');\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <video className=\"video-background\" autoPlay loop muted>\n        <source src=\"/images/other-background.mp4\" type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n\n      <div className=\"dashboard-content\">\n        <h2>Welcome to your Dashboard!</h2>\n        <p>Our products will be coming soon!</p>\n\n        <div className=\"waiting-list-container\">\n          <h3>Join Our Waiting List</h3>\n          <p>Be the first to test our beta version when it's released.</p>\n\n          {!submitted ? (\n            <form onSubmit={handleSubmit} className=\"waiting-list-form\">\n              <div className=\"form-group\">\n                <input\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"Enter your email address\"\n                  className=\"email-input\"\n                />\n                {error && <p className=\"error-message\">{error}</p>}\n              </div>\n              <button type=\"submit\" className=\"submit-button\">Join Waiting List</button>\n            </form>\n          ) : (\n            <div className=\"success-message\">\n              <p>Thank you for joining our waiting list! We'll notify you when our beta version is ready.</p>\n            </div>\n          )}\n        </div>\n\n        {/* Add this mailing list section */}\n        <section className=\"dashboard-mailing-list\">\n          <div className=\"mailing-list-card\">\n            <h3>Stay Updated</h3>\n            <p>Subscribe to our newsletter for the latest features and updates</p>\n            \n            <form onSubmit={handleSubscribe} className=\"dashboard-subscribe-form\">\n              <div className=\"form-group\">\n                <input \n                  type=\"email\" \n                  placeholder=\"Enter your email\" \n                  value={subscribeEmail} \n                  onChange={handleEmailChange}\n                  className={emailError ? 'error' : ''}\n                  required\n                />\n                {emailError && <span className=\"error-message\">{emailError}</span>}\n              </div>\n              <button type=\"submit\" className=\"dashboard-subscribe-button\">Subscribe</button>\n            </form>\n            \n            {subscribeMessage && (\n              <p className=\"subscribe-message success\">{subscribeMessage}</p>\n            )}\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}